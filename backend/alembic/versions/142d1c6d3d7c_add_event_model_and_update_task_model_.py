"""Add Event model and update Task model for project-based structure

Revision ID: 142d1c6d3d7c
Revises: f883e0c92c69
Create Date: 2025-10-01 12:12:41.712839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '142d1c6d3d7c'
down_revision: Union[str, None] = 'f883e0c92c69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('participants', sa.JSON(), nullable=True),
    sa.Column('alert_minutes', sa.Integer(), nullable=True),
    sa.Column('repeat_pattern', sa.String(length=50), nullable=True),
    sa.Column('repeat_interval', sa.Integer(), nullable=True),
    sa.Column('repeat_days', sa.JSON(), nullable=True),
    sa.Column('repeat_end_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.add_column('tasks', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('tasks', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('tasks', sa.Column('project', sa.String(length=100), nullable=False))
    op.add_column('tasks', sa.Column('scheduled_date', sa.DateTime(), nullable=True))
    op.add_column('tasks', sa.Column('is_scheduled', sa.Boolean(), nullable=True))
    op.add_column('tasks', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.drop_column('tasks', 'assign_to')
    op.drop_column('tasks', 'alert_time')
    op.drop_column('tasks', 'label')
    op.drop_column('tasks', 'text')
    op.drop_column('tasks', 'notes')
    op.drop_column('tasks', 'task_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('label', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('alert_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('assign_to', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_column('tasks', 'is_active')
    op.drop_column('tasks', 'is_scheduled')
    op.drop_column('tasks', 'scheduled_date')
    op.drop_column('tasks', 'project')
    op.drop_column('tasks', 'description')
    op.drop_column('tasks', 'title')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ###
